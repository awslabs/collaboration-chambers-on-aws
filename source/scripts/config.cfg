# Python
PYTHON_VERSION="3.7.9"
PYTHON_TGZ="Python-3.7.9.tgz"
PYTHON_URL="https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz"
PYTHON_HASH="bcd9f22cf531efc6f06ca6b9b2919bd4"

# Scheduler
OPENPBS_VERSION="20.0.1"
OPENPBS_TGZ="v20.0.1.tar.gz"
OPENPBS_URL="https://github.com/openpbs/openpbs/archive/v20.0.1.tar.gz"
OPENPBS_HASH="25d737fc3b93a973f5a7739cfd3429b3"

# OpenMPI
OPENMPI_VERSION="4.0.1"
OPENMPI_TGZ="openmpi-4.0.1.tar.gz"
OPENMPI_URL="https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.1.tar.gz"
OPENMPI_HASH="c72d9eb908a0f60e3155698a646cde38"

# DCV
DCV_X86_64_VERSION="2020.1-9012-el7-x86_64"
DCV_X86_64_TGZ="nice-dcv-2020.1-9012-el7-x86_64.tgz"
DCV_X86_64_URL="https://d1uj6qtbmh3dt5.cloudfront.net/2020.1/Servers/nice-dcv-2020.1-9012-el7-x86_64.tgz"
DCV_X86_64_HASH="bbb715b47c0e47711deef1870c70120e"
DCV_AARCH64_VERSION="2020.1-9012-el7-aarch64"
DCV_AARCH64_TGZ="nice-dcv-2020.1-9012-el7-aarch64.tgz"
DCV_AARCH64_URL="https://d1uj6qtbmh3dt5.cloudfront.net/2020.1/Servers/nice-dcv-2020.1-9012-el7-aarch64.tgz"
DCV_AARCH64_HASH="c16f4f1ea253170a980ec31c69e13b07"

# EFA
EFA_VERSION="1.11.1"
EFA_TGZ="aws-efa-installer-1.11.1.tar.gz"
EFA_URL="https://efa-installer.amazonaws.com/aws-efa-installer-1.11.1.tar.gz"
EFA_HASH="026b0d9a0a48780cc7406bd51997b1c0"

# Metric Beat
METRICBEAST_RPM="metricbeat-oss-7.6.2-x86_64.rpm"
METRICBEAT_URL="https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-oss-7.6.2-x86_64.rpm"
METRICBEAT_HASH="631a7e53a47c53b092f64db9cd8a96a8"

# SSM
SSM_X86_64_URL="https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm"
SSM_AARCH64_URL="https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_arm64/amazon-ssm-agent.rpm"

# Default LDAP base
LDAP_BASE="DC=soca,DC=local"

if grep -q 'Amazon Linux release 2' /etc/system-release; then
    BASE_OS=amazonlinux2
elif grep -q 'CentOS Linux release 7' /etc/system-release; then
    BASE_OS=centos7
else
    BASE_OS=rhel7
fi

# System libraries
SYSTEM_PKGS=(
    wget
    chrony
    cpp
    e2fsprogs
    e2fsprogs-libs
    gcc
    gcc-c++
    gcc-gfortran
    glibc
    glibc-common
    glibc-devel
    glibc-headers
    gssproxy
    kernel
    kernel-devel
    kernel-headers
    keyutils
    keyutils-libs-devel
    krb5-devel
    krb5-libs
    libbasicobjects
    libcollection
    libcom_err
    libcom_err-devel
    libevent
    libffi-devel
    libgcc
    libgfortran
    libgomp
    libini_config
    libkadm5
    libmpc
    libnfsidmap
    libpath_utils
    libquadmath
    libquadmath-devel
    libref_array
    libselinux
    libselinux-devel
    libselinux-python
    libselinux-utils
    libsepol
    libsepol-devel
    libss
    libstdc++
    libstdc++-devel
    libtalloc
    libtevent
    libtirpc
    libverto-devel
    libverto-tevent
    mpfr
    mdadm
    nvme-cli
    elfutils-libelf-devel
    nfs-utils
    git
    htop
    openssl
    openssl-devel
    openssl-libs
    pcre
    pcre-devel
    perl
    perl-Carp
    perl-Encode
    perl-Env
    perl-Exporter
    perl-File-Path
    perl-File-Temp
    perl-Filter
    perl-Getopt-Long
    perl-HTTP-Tiny
    perl-PathTools
    perl-Pod-Escapes
    perl-Pod-Perldoc
    perl-Pod-Simple
    perl-Pod-Usage
    perl-Scalar-List-Utils
    perl-Socket
    perl-Storable
    perl-Switch
    perl-Text-ParseWords
    perl-Time-HiRes
    perl-Time-Local
    perl-constant
    perl-libs
    perl-macros
    perl-parent
    perl-podlators
    perl-threads
    perl-threads-shared
    quota
    quota-nls
    rpcbind
    sqlite-devel
    nss-pam-ldapd
    tcp_wrappers
    zlib
    zlib-devel
    redhat-lsb
)

if [ "$BASE_OS" == "rhel7" ]; then
    SYSTEM_PKGS+=(
        vim-X11
    )
else
    SYSTEM_PKGS+=(
        vim
    )
fi
if [ "$BaseOS" == "amazonlinux2" ]; then
    SYSTEM_PKGS+=(
        system-lsb
    )
fi

SCHEDULER_PKGS=(
    dejavu-fonts-common
    dejavu-sans-fonts
    fontconfig
    fontpackages-filesystem
    freetype
    htop
    hwloc
    hwloc-libs
    libICE
    libSM
    libX11
    libX11-common
    libX11-devel
    libXau
    libXft
    libXrender
    libical
    libpng
    libtool-ltdl
    libxcb
    postgresql
    postgresql-contrib
    postgresql-devel
    postgresql-libs
    postgresql-server
    tcl
    tk
    rpm-build
    libtool
    hwloc-devel
    libXt-devel
    libedit-devel
    libical-devel
    ncurses-devel
    perl
    python3
    python3-pip
    python3-devel
    tcl-devel
    tk-devel
    swig
    expat-devel
    openssl-devel
    libXext
    libXft
    autoconf
    automake
    hwloc-devel
)

OPENLDAP_SERVER_PKGS=(
    compat-openldap
    cyrus-sasl
    cyrus-sasl-devel
    openldap
    openldap-clients
    openldap-devel
    openldap-servers
    unixODBC
    unixODBC-devel
)

SSSD_PKGS=(
    avahi-libs
    bind-libs
    bind-libs-lite
    bind-license
    bind-utils
    c-ares
    cups-libs
    cyrus-sasl-gssapi
    http-parser
    libdhash
    libipa_hbac
    libldb
    libsmbclient
    libsss_autofs
    libsss_certmap
    libsss_idmap
    libsss_nss_idmap
    libsss_sudo
    libtalloc
    libtdb
    libtevent
    libwbclient
    python-sssdconfig
    samba-client-libs
    samba-common
    samba-common-libs
    sssd
    sssd-ad
    sssd-client
    sssd-common
    sssd-common-pac
    sssd-ipa
    sssd-krb5
    sssd-krb5-common
    sssd-ldap
    sssd-proxy
)

# Package top install Gnome on Amazon Linux 2
DCV_AMAZONLINUX_PKGS=(
    gdm
    gnome-session
    gnome-classic-session
    gnome-session-xsession
    gnome-terminal
    gnu-free-fonts-common
    gnu-free-mono-fonts
    gnu-free-sans-fonts
    gnu-free-serif-fonts
    xorg-x11-server-Xorg
    xorg-x11-server-utils
    xorg-x11-utils
)
